trigger: none
pr: none

schedules:
- cron: "0 0 * * *"
  displayName: Nightly build
  branches:
    include:
    - main
  always: true

variables:
  - group: ChokuretsuSecrets
resources:
  repositories:
  - repository: ChokuretsuTranslationStrings
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationStrings
  - repository: ChokuretsuTranslationAssets
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationAssets
  - repository: ChokuretsuTranslationUtility
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationUtility
  - repository: NitroPacker
    type: github
    endpoint: haroohie-club
    name: haroohie-club/NitroPacker
  - repository: HaroohieCloudManager
    type: github
    endpoint: haroohie-club
    name: haroohie-club/HaroohieCloudManager

jobs:
- job:
  strategy:
    matrix:
      # ar:
      #   Language: "ar"
      #   PatchVersion: v0.1.$(Build.BuildNumber)
      #   Dub: false
      #   Charset: $(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset/ar.json
      # de:
      #   Language: "de"
      #   PatchVersion: v0.1.$(Build.BuildNumber)
      #   Dub: false
      #   Charset: $(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset/shared.json
      en:
        Language: "en"
        PatchVersion: v0.8
        Dub: false
        Charset: $(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset/shared.json
      # it:
      #   Language: "it"
      #   PatchVersion: v0.1.$(Build.BuildNumber)
      #   Dub: true
      #   Charset: $(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset/shared.json
      # ru:
      #   Language: "ru"
      #   PatchVersion: v0.1.$(Build.BuildNumber)
      #   Dub: false
      #   Charset: $(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset/shared.json
  displayName: Build & Publish
  pool:
    vmImage: ubuntu-latest
  container: ghcr.io/haroohie-club/chokuretsu-devkitarm:main
  steps:
  - checkout: self
    clean: true
  - checkout: ChokuretsuTranslationStrings
  - checkout: ChokuretsuTranslationAssets
  - checkout: ChokuretsuTranslationUtility
  - checkout: NitroPacker
  - checkout: HaroohieCloudManager
  - task: DotNetCoreCLI@2
    inputs:
      command: 'run'
      projects: HaroohieCloudManager/HaroohieCloudManager/HaroohieCloudManager.csproj
      arguments: '-- download-rom -k $(SpacesKey) -s $(SpacesSecret) -u "https://nyc3.digitaloceanspaces.com" -n "haroohie" -r "bootstrap/chokuretsu/original.zip" -p "$(Build.SourcesDirectory)/ChokuretsuTranslationBuild/original.zip"'
    displayName: Download ROM
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/HaruhiChokuretsuCLI.csproj
    displayName: Build HaruhiChokuretsuCLI
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: NitroPacker/HaroohieClub.NitroPacker.Cli/HaroohieClub.NitroPacker.Cli.csproj
    displayName: Build NitroPackerCLI
    
  - powershell: |
      Write-Host "Removing Episode 5/Chess strings files..."
      Remove-Item -Path ChokuretsuTranslationStrings/strings/093.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/094.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/095.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/096.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/097.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/098.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/099.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/10*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/11*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/12*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/13*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/14*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/15*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/16*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/17*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/180.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/181.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/353.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/354.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/355.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/356.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/357.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/501.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/502.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/503.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/504.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/505.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/506.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/507.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/508.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/509.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/51*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/52*.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/530.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/531.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/532.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/533.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/534.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/535.en.resx
      Remove-Item -Path ChokuretsuTranslationStrings/strings/536.en.resx
    displayName: Remove epsiode 5 strings

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/setup.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Run setup

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build_arc.ps1
      arguments: -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -devkitArm "/opt/devkitpro/devkitARM/" -resxLangCode "$(Language)" -version "$(PatchVersion)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Build archives

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (clean OP/ED, voice subs)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-cleanoped-voicesubs.xdelta
    displayName: Create xdelta patch (clean OP/ED, voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)" -noVoiceSubs
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (clean OP/ED, no voice subs)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-cleanoped-novoicesubs.xdelta
    displayName: Create xdelta patch (clean OP/ED, no voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/copy-movies.ps1
      arguments: -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Copy movies
  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (subbed OP/ED, voice subs)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-subbedoped-voicesubs.xdelta
    displayName: Create xdelta patch (subbed OP/ED, voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)" -noVoiceSubs
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (subbed OP/ED, no voice subs)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-subbedoped-novoicesubs.xdelta
    displayName: Create xdelta patch (subbed OP/ED, no voice subs)
  
  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build_arc.ps1
      arguments: -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -devkitArm "/opt/devkitpro/devkitARM/" -resxLangCode "$(Language)" -version "$(PatchVersion)" -dub
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Build archives (with dub)
    condition: eq(variables.Dub, true)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/copy-movies.ps1
      arguments: -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Copy movies (with dub)
    condition: eq(variables.Dub, true)
  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (dub, voice subs)
    condition: eq(variables.Dub, true)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-dubbed-voicesubs.xdelta
    displayName: Create xdelta patch (dub, voice subs)
    condition: eq(variables.Dub, true)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/HaroohieClub.NitroPacker.Cli/bin/Debug/net8.0/NitroPacker" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net8.0/HaruhiChokuretsuCLI" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Charset)" -langCode "$(Language)" -noVoiceSubs
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: /opt/devkitpro/devkitARM/
      DEVKITPRO: /opt/devkitpro/
    displayName: Build ROM (dub, no voice subs)
    condition: eq(variables.Dub, true)
  - powershell: xdelta3 -e -S -s ChokuretsuTranslationBuild/original.nds ChokuretsuTranslationBuild/HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)/chokuretsu-patch-$(Language)-$(PatchVersion)-dubbed-novoicesubs.xdelta
    displayName: Create xdelta patch (dub, no voice subs)
    condition: eq(variables.Dub, true)

  - powershell: |
      $patches = ""
      if ($env:Dub -eq $True) {
        $patches += "Complete Patch (Dubbed):$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-dubbed-voicesubs.xdelta;"
        $patches += "Dubbed, No Voice Subs Patch:$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-dubbed-novoicesubs.xdelta;"
        $patches += "Complete Patch (No Dub):$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-subbedoped-voicesubs.xdelta;"
      } else {
        $patches += "Complete Patch:$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-subbedoped-voicesubs.xdelta;"
      }
      $patches += "Subbed OP/ED, No Voice Subs Patch:$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-subbedoped-novoicesubs.xdelta;"
      $patches += "Clean OP/ED, Voice Subs Patch:$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-cleanoped-voicesubs.xdelta;"
      $patches += "Clean OP/ED, No Voice Subs Patch:$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/chokuretsu-patch-$($env:Language)-$($env:PatchVersion)-cleanoped-novoicesubs.xdelta"
      if (Test-Path "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/dat.log") {
        Move-Item -Path "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/dat.log" -Destination "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/$($env:Language)-$($env:PatchVersion)-dat.log"
        $patches += ";dat.bin RESX Import Warnings:$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/$($env:Language)-$($env:PatchVersion)-dat.log"
      }
      if (Test-Path "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/evt.log") {
        Move-Item -Path "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/evt.log" -Destination "$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/$($env:Language)-$($env:PatchVersion)-evt.log"
        $patches += ";evt.bin RESX Import Warnings:$($env:BUILD_SOURCESDIRECTORY)/ChokuretsuTranslationBuild/$($env:Language)-$($env:PatchVersion)-evt.log"
      }

      Write-Host $patches
      dotnet run --project HaroohieCloudManager/HaroohieCloudManager/HaroohieCloudManager.csproj -- upload-patches -k $env:SpacesKey -s $env:SpacesSecret -u "https://nyc3.digitaloceanspaces.com" -n "haroohie" -g "chokuretsu" -l "$env:Language" -v "$env:PatchVersion" -p "$patches" -w $env:WebhookUri
    env:
      Language: $(Language)
      PatchVersion: $(PatchVersion)
      SpacesKey: $(SpacesKey)
      SpacesSecret: $(SpacesSecret)
      WebhookUri: $(DiscordWebHook)
      Dub: $(Dub)
    displayName: Copy patches to Digital Ocean storage and post patch notification to Discord