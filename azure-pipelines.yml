trigger: none
pr: none

schedules:
- cron: "0 0 * * *"
  displayName: Nightly build
  branches:
    include:
    - main
  always: true

variables:
  - group: ChokuretsuSecrets
  - name: PatchVersion
    value: v0.5.$(Build.BuildNumber)

resources:
  repositories:
  - repository: ChokuretsuTranslationStrings
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationStrings
  - repository: ChokuretsuTranslationAssets
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationAssets
  - repository: ChokuretsuTranslationUtility
    type: github
    endpoint: haroohie-club
    name: haroohie-club/ChokuretsuTranslationUtility

jobs:
- job:
  strategy:
    matrix:
      en:
        Language: "en"
      pt-BR:
        Language: "pt-BR"
  displayName: Build & Publish
  pool:
    vmImage: windows-latest
  steps:
  - checkout: self
    clean: true
  - checkout: ChokuretsuTranslationStrings
  - checkout: ChokuretsuTranslationAssets
  - checkout: ChokuretsuTranslationUtility
  - powershell: |
      Write-Host "Downloading devkitARM..."
      Start-BitsTransfer -Source "https://dockerbootstrap.blob.core.windows.net/chokuretsu/devkitPro.zip?$($env:SAS)" -Destination devkitPro.zip -RetryInterval 60
      Write-Host "Downloading NitroPacker..."
      Start-BitsTransfer -Source "https://dockerbootstrap.blob.core.windows.net/chokuretsu/NitroPacker.zip?$($env:SAS)" -Destination NitroPacker.zip -RetryInterval 60
      Write-Host "Downloading ROM..."
      Start-BitsTransfer -Source "https://dockerbootstrap.blob.core.windows.net/chokuretsu/original.zip?$($env:SAS)" -Destination original.zip -RetryInterval 60
      Write-Host "Downloading xdelta3..."
      Start-BitsTransfer -Source "https://dockerbootstrap.blob.core.windows.net/chokuretsu/xdelta3.zip?$($env:SAS)" -Destination xdelta3.zip -RetryInterval 60
      
      Write-Host "Unzipping devkitARM..."
      Expand-Archive devkitPro.zip
      Write-Host "Unzipping NitroPacker..."
      Expand-Archive NitroPacker.zip
      Write-Host "Unzipping ROM..."
      Expand-Archive original.zip
      Write-Host "Unzipping xdelta3..."
      Expand-Archive xdelta3.zip
      
      Write-Host "Moving ROM to ChokuretsuTranslationBuild..."
      Move-Item -Path original/original.nds -Destination ChokuretsuTranslationBuild\original.nds

      Write-Host "Getting MD5 hash of original ROM..."
      Get-FileHash -Path ChokuretsuTranslationBuild\original.nds -Algorithm MD5
    env:
      SAS: $(ChokuretsuSAS)
    displayName: Download dependencies
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/HaruhiChokuretsuCLI.csproj
    displayName: Build HaruhiChokuretsuCLI

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/setup.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/NitroPacker.exe"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Run setup

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build_arc.ps1
      arguments: -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net6.0/HaruhiChokuretsuCLI.exe" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -devkitArm "$(Build.SourcesDirectory)/devkitPro/devkitARM" -resxLangCode "$(Language)" -version "$(PatchVersion)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Build archives

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/NitroPacker.exe" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net6.0/HaruhiChokuretsuCLI.exe" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset.json" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: $(Build.SourcesDirectory)/devkitPro/devkitARM
      DEVKITPRO: $(Build.SourcesDirectory)/devkitPro
    displayName: Build ROM (clean OP/ED, voice subs)
  - powershell: $(Build.SourcesDirectory)\xdelta3\xdelta3.exe -e -S -s ChokuretsuTranslationBuild\original.nds ChokuretsuTranslationBuild\HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)\chokuretsu-patch-$(PatchVersion)-cleanoped-voicesubs.xdelta
    displayName: Create xdelta patch (clean OP/ED, voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/NitroPacker.exe" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net6.0/HaruhiChokuretsuCLI.exe" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset.json" -langCode "$(Language)" -noVoiceSubs
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: $(Build.SourcesDirectory)/devkitPro/devkitARM
      DEVKITPRO: $(Build.SourcesDirectory)/devkitPro
    displayName: Build ROM (clean OP/ED, no voice subs)
  - powershell: $(Build.SourcesDirectory)\xdelta3\xdelta3.exe -e -S -s ChokuretsuTranslationBuild\original.nds ChokuretsuTranslationBuild\HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)\chokuretsu-patch-$(PatchVersion)-cleanoped-novoicesubs.xdelta
    displayName: Create xdelta patch (clean OP/ED, no voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/copy-movies.ps1
      arguments: -assetsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    displayName: Copy movies
  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/NitroPacker.exe" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net6.0/HaruhiChokuretsuCLI.exe" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset.json" -langCode "$(Language)"
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: $(Build.SourcesDirectory)/devkitPro/devkitARM
      DEVKITPRO: $(Build.SourcesDirectory)/devkitPro
    displayName: Build ROM (subbed OP/ED, voice subs)
  - powershell: $(Build.SourcesDirectory)\xdelta3\xdelta3.exe -e -S -s ChokuretsuTranslationBuild\original.nds ChokuretsuTranslationBuild\HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)\chokuretsu-patch-$(PatchVersion)-subbedoped-voicesubs.xdelta
    displayName: Create xdelta patch (subbed OP/ED, voice subs)

  - task: PowerShell@2
    inputs:
      filePath: ChokuretsuTranslationBuild/build.ps1
      arguments: -nitroPacker "$(Build.SourcesDirectory)/NitroPacker/NitroPacker.exe" -haruhiCli "$(Build.SourcesDirectory)/ChokuretsuTranslationUtility/HaruhiChokuretsuCLI/bin/Debug/net6.0/HaruhiChokuretsuCLI.exe" -stringsFolder "$(Build.SourcesDirectory)/ChokuretsuTranslationStrings" -fontReplacementMap "$(Build.SourcesDirectory)/ChokuretsuTranslationAssets/misc/charset.json" -langCode "$(Language)" -noVoiceSubs
      workingDirectory: $(Build.SourcesDirectory)/ChokuretsuTranslationBuild
    env:
      DEVKITARM: $(Build.SourcesDirectory)/devkitPro/devkitARM
      DEVKITPRO: $(Build.SourcesDirectory)/devkitPro
    displayName: Build ROM (subbed OP/ED, no voice subs)
  - powershell: $(Build.SourcesDirectory)\xdelta3\xdelta3.exe -e -S -s ChokuretsuTranslationBuild\original.nds ChokuretsuTranslationBuild\HaruhiChokuretsu.nds $(Build.ArtifactStagingDirectory)\chokuretsu-patch-$(PatchVersion)-subbedoped-novoicesubs.xdelta
    displayName: Create xdelta patch (subbed OP/ED, no voice subs)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Nightly Patches'
      publishLocation: 'Container'
    displayName: Publish xdelta patches
  - powershell: |
      Write-Host "Uploading subbed OP/ED & voice subs patch..."
      $fileToUpload = "$(Build.ArtifactStagingDirectory)\chokuretsu-patch-$($env:PatchVersion)-subbedoped-voicesubs.xdelta"
      $uploadUri = "https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-subbedoped-voicesubs.xdelta?$env:WriteSAS"
      $headers = @{ 'x-ms-blob-type' = 'BlockBlob' }
      Invoke-RestMethod $uploadUri -Method PUT -Headers $headers -InFile $fileToUpload
      Write-Host "Uploading subbed OP/ED & no voice subs patch..."
      $fileToUpload = "$(Build.ArtifactStagingDirectory)\chokuretsu-patch-$($env:PatchVersion)-subbedoped-novoicesubs.xdelta"
      $uploadUri = "https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-subbedoped-novoicesubs.xdelta?$env:WriteSAS"
      $headers = @{ 'x-ms-blob-type' = 'BlockBlob' }
      Invoke-RestMethod $uploadUri -Method PUT -Headers $headers -InFile $fileToUpload
      Write-Host "Uploading clean OP/ED & voice subs patch ..."
      $fileToUpload = "$(Build.ArtifactStagingDirectory)\chokuretsu-patch-$($env:PatchVersion)-cleanoped-voicesubs.xdelta"
      $uploadUri = "https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-cleanoped-voicesubs.xdelta?$env:WriteSAS"
      $headers = @{ 'x-ms-blob-type' = 'BlockBlob' }
      Invoke-RestMethod $uploadUri -Method PUT -Headers $headers -InFile $fileToUpload
      Write-Host "Uploading clean OP/ED & no voice subs patch..."
      $fileToUpload = "$(Build.ArtifactStagingDirectory)\chokuretsu-patch-$($env:PatchVersion)-cleanoped-novoicesubs.xdelta"
      $uploadUri = "https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-cleanoped-novoicesubs.xdelta?$env:WriteSAS"
      $headers = @{ 'x-ms-blob-type' = 'BlockBlob' }
      Invoke-RestMethod $uploadUri -Method PUT -Headers $headers -InFile $fileToUpload
    env:
      Language: $(Language)
      PatchVersion: $(PatchVersion)
      WriteSAS: $(PatchesWriteSAS)
    displayName: Copy patches to Azure Storage
  - powershell: |
      Invoke-RestMethod -Uri "$env:WebHookUri" -Method POST -Headers @{ "Content-Type" = "application/json" } -Body "{`"content`": null, `"embeds`": [ { `"title`": `"Nightly $env:Language Patch`", `"description`": `"A new $env:Language patch is available for testing!`", `"fields`": [ { `"name`": `"Complete Patch`", `"value`": `"[Download](https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-subbedoped-voicesubs.xdelta?$env:ReadSAS)`" }, { `"name`": `"Subbed OP/ED, No Voice Subs Patch`", `"value`": `"[Download](https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-subbedoped-novoicesubs.xdelta?$env:ReadSAS)`" }, { `"name`": `"Clean OP/ED, Voice Subs Patch`", `"value`": `"[Download](https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-cleanoped-voicesubs.xdelta?$env:ReadSAS)`" }, { `"name`": `"Clean OP/ED, No Voice Subs Patch`", `"value`": `"[Download](https://dockerbootstrap.blob.core.windows.net/patches/chokuretsu-patch-$($env:PatchVersion)-$($env:Language)-cleanoped-novoicesubs.xdelta?$env:ReadSAS)`" } ], `"author`": { `"name`": `"$env:Language - $env:PatchVersion`" } } ], `"attachments`": [] }"
    env:
      Language: $(Language)
      WebHookUri: $(DiscordWebHook)
      PatchVersion: $(PatchVersion)
      ReadSAS: $(PatchesReadSAS)
    displayName: Post patch notification to Discord